"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import mobilesim.lcmtypes.interaction_message_t

class interaction_message_list_t(object):
    __slots__ = ["utime", "source", "num_messages", "messages"]

    def __init__(self):
        self.utime = 0
        self.source = ""
        self.num_messages = 0
        self.messages = []

    def encode(self):
        buf = BytesIO()
        buf.write(interaction_message_list_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.utime))
        __source_encoded = self.source.encode('utf-8')
        buf.write(struct.pack('>I', len(__source_encoded)+1))
        buf.write(__source_encoded)
        buf.write(b"\0")
        buf.write(struct.pack(">i", self.num_messages))
        for i0 in range(self.num_messages):
            assert self.messages[i0]._get_packed_fingerprint() == mobilesim.lcmtypes.interaction_message_t._get_packed_fingerprint()
            self.messages[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != interaction_message_list_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return interaction_message_list_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = interaction_message_list_t()
        self.utime = struct.unpack(">q", buf.read(8))[0]
        __source_len = struct.unpack('>I', buf.read(4))[0]
        self.source = buf.read(__source_len)[:-1].decode('utf-8', 'replace')
        self.num_messages = struct.unpack(">i", buf.read(4))[0]
        self.messages = []
        for i0 in range(self.num_messages):
            self.messages.append(mobilesim.lcmtypes.interaction_message_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if interaction_message_list_t in parents: return 0
        newparents = parents + [interaction_message_list_t]
        tmphash = (0x94ea4f9000e36cb+ mobilesim.lcmtypes.interaction_message_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if interaction_message_list_t._packed_fingerprint is None:
            interaction_message_list_t._packed_fingerprint = struct.pack(">Q", interaction_message_list_t._get_hash_recursive([]))
        return interaction_message_list_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

