# Once all the required information has been received, 
#   store it in smem and mark the superstate.operator as learned
sp {learn-word*propose*complete-learn-word
   (state <s> ^name learn-word)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-learn-word
        ^category smem)
}

sp {learn-word*apply*complete-learn-word*create-word
   (state <s> ^name learn-word
              ^operator.name complete-learn-word
              ^word <word>
              ^property.result <prop>)
-->
   (<s> ^word-structure <ws>)
   (<ws> ^wme-type word ^word <word> ^sense <sense>)
   (<sense> ^wme-type sense ^type adjective ^property <prop> ^word <ws>)
}

sp {learn-word*apply*complete-learn-word*create-label
   (state <s> ^name learn-word
              ^operator.name complete-learn-word
              ^word-structure.sense <sense>
              ^property.result.name {<prop-name> <> name <> generic}
              ^word <word>)
-->
   (<sense> ^label (concat <prop-name> |-| <word>))
}

sp {learn-word*apply*complete-learn-word*store*word
   (state <s> ^name learn-word
              ^operator.name complete-learn-word
              ^word-structure <ws>
              ^smem.command <cmd>)
-->
   (<cmd> ^store <ws>)
}

sp {learn-word*apply*complete-learn-word*store*senses
   (state <s> ^name learn-word
              ^operator.name complete-learn-word
              ^word-structure.sense <sense>
              ^smem.command <cmd>)
-->
   (<cmd> ^store <sense>)
}

sp {learn-word*apply*complete-learn-word*perform*learning-event
   (state <s> ^name learn-word
              ^operator.name complete-learn-word
              ^word <word>
              ^word-structure <ws>
              ^smem.result.success <ws>
              ^topstate.interaction.status <status>)
-->
   (<status> ^performed.learning-event <e>)
   (<e> ^type word
        ^word <word>)
}