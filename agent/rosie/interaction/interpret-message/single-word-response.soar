# Rules that handle when a single-word-response is sent by the user

sp {interpret-message*propose*single-word-response
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^type single-word-response
         -^processed)
-->
   (<s> ^operator <o> +)
   (<o> ^name single-word-response
        ^category communication
        ^message <msg>)
}

# Elaborate useful information from the message to the operator
sp {interpret-message*elaborate*single-word-response*response
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name single-word-response
        ^message <msg>)
   (<msg> ^information.response <response>)
-->
   (<o> ^response <response>)
}


sp {interpret-message*apply*single-word-response*mark*processed
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name single-word-response
        ^message <msg>)
-->
   (<msg> ^processed true)
}


####################################################################
#
# teaching-request
#   Instructor responds 'finished' or 'cancel' to a teaching request
#
#####################################################################

# teaching-request - respond with finished or cancel
sp {interpret-message*apply*single-word-response*teaching-request*cancel
   (state <s> ^name interpret-message
              ^operator <o>
              ^current-purpose <p>)
   (<o> ^name single-word-response
        ^response cancel)
   (<p> ^type teaching-request
        ^target-object.index-info <info>)
-->
   (<info> ^use-interaction false)
}

sp {interpret-message*apply*single-word-response*teaching-request*cancel*remove*use-interaction
   (state <s> ^name interpret-message
              ^operator <o>
              ^current-purpose <p>)
   (<o> ^name single-word-response
        ^response cancel)
   (<p> ^type teaching-request
        ^target-object.index-info <info>)
   (<info> ^use-interaction true)
-->
   (<info> ^use-interaction true -)
}

####################################################################
#
# status
#   Gets information about what the agent is current expecting
####################################################################
sp {interpret-message*apply*single-word-response*help
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name single-word-response
        ^response help)
-->
   (<s> ^new-segment-info <info>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type report-interaction
        ^satisfaction.dialog-event <de>)
   (<de> ^type report-interaction
         ^originator agent)
}

####################################################################
#
# clear
#   clears the interaction stack to hopefully get out of an error state
####################################################################
sp {interpret-message*apply*single-word-response*clear
   (state <s> ^name interpret-message
              ^operator <o>
              ^topstate.interaction.changes <c>)
   (<o> ^name single-word-response
        ^response clear)
-->
   (<c> ^clear-interaction-stack true)
} 

#
## AM: Saying status will cause the agent to describe the current interaction


##JK for prepositions
#sp {interpret-message*apply*single-word-response*teaching-request*cancel*prep
#   (state <s> ^name interpret-message
#              ^operator <o>)
#   (<o> ^name single-word-response
#        ^response cancel
#        ^message.context <context>)
#   (<context> ^status <stat>)
#-->
#   (<stat> ^no-teaching true)
#}
#
