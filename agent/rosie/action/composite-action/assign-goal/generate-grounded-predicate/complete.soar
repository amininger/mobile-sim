################# elaborate common predicates from superstate
sp {generate-grounded-predicate*operator-proposal-state*same*relation-predicate
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^action-operator-proposal-state <as>
	      ^grounded-predicate <pred>
	      ^desired-grounded-predicate <npred>)
   (<as> ^desired <asd>
   	 ^not-tracking <asd-tr>)
   (<asd> ^track-relation <asd-tr>)
   (<asd-tr> ^relation <rel1> 
   	     ^p1.focus <id1>
	     ^p2.focus <id2>)
   (<rel1> ^smem-rep <rel-id>)
   (<pred> ^relation.smem-rep <rel-id>
   	   ^p1 <p1obj>
	   ^p2 <p2obj>
	   ^_instantiation-of <iof>)
   (<p1obj> ^focus <id1>)
   (<p2obj> ^focus <id2>)
-->
   (<s> ^desired-grounded-predicate <npred>)
   (<npred> ^relation <rel1>
   	    ^p1 <p1obj>
	    ^p2 <p2obj>
	    ^_instantiation-of <iof>)
   (<s> ^matched-with-superstate <pred>)
}

sp {generate-grounded-predicate*complete*relation
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      -^matched-with-superstate <pred>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^grounded-predicate <pred>)
   (<pred> ^relation <any-rel>
   	   ^p1 <any-p1>
	   ^p2 <any-p2>)
-->
   (<s> ^desired-grounded-predicate <pred>)
}


sp {generate-grounded-predicate*complete*state
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      -^matched-with-superstate <pred>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^grounded-predicate <pred>)
   (<pred> ^state <any-rel>
   	   ^p1 <any-p1>)
-->
   (<s> ^desired-grounded-predicate <pred>)
}

#### write desired predicates to desired attribute
sp {generate-grounded-predicate*write*desired*track-relation
   (state <s> ^name generate-grounded-predicate
   	      ^desired <des>
	      ^operator.name complete-generate-grounded-predicate
	      ^desired-grounded-predicate <pred>)
   (<pred> ^relation)
-->
   (<des> ^track-relation <pred>)
}

sp {generate-grounded-predicate*write*desired*achieve-state
   (state <s> ^name generate-grounded-predicate
   	      ^desired <des>
	      ^operator.name complete-generate-grounded-predicate
	      ^desired-grounded-predicate <pred>)
   (<pred> ^state)
-->
   (<des> ^achieve-state <pred>)
}

### failure if the predicate relation is incomplete
sp {generate-grounded-predicate*failure*no-relation
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^type relation-predicate
	      ^predicate-definition <def>
#	      ^topstate.interaction.status <stat>
	      ^superstate <ss>)
   (<def> ^relation <rel-node>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^grounded-predicate <pred>)
   (<pred> -^relation <any-rel>)
-->
   (<ss> ^failure <f>)
   (<f> ^details <d>
   	^predicate-definition <def>)
   (<d> ^predicate <pred>
	^unknown relation
	^relation-node <rel-node>)
}

### failure if the predicate argumentation is incomplete
sp {generate-grounded-predicate*failure*no-attribute
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^type state-predicate
	      ^predicate-definition <def>
#	      ^topstate.interaction.status <stat>
	      ^superstate <ss>)
   (<def> ^p1 <p1-node>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^grounded-predicate <pred>)
   (<pred> -^p1 <any-p2>)
-->
   (<ss> ^failure <f>)
   (<f> ^details <d>
   	^predicate-definition <def>)
   (<d> ^predicate <pred>
	^unknown attribute
	^attribute <p1-node>)
}
