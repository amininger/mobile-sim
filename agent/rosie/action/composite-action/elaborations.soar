sp {composite-action*elaborate*status*from*topstate
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^superstate.operator._metadata.map-id <map-id>
	      ^topstate.interaction.stack.segment.purpose.satisfaction.action-event.status learning)
-->
   (<s> ^action-status learning)
}


sp {composite-action*elaborate*copy*action-status
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^superstate.action-status learning)
-->
   (<s> ^action-status learning)
}


sp {composite-operator*elaborate*map-id
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^superstate.operator <sop>)
   (<sop> ^_metadata.map-id <map-id>)
-->
   (<s> ^map-id <map-id>)
}

sp {composite-operator*elaborate*other-ids
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^map-id <map-id>)
   (<map-id> ^procedural <proc-id>
   	     ^action-space <as-id>
	     ^goal <gid>)
-->
   (<s> ^procedural-id <proc-id>
   	^action-space-id <as-id>
	^goal-id <gid>)
}

#################### elaborate smem-query #######################
sp {composite-operator*query*map-id
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^superstate.operator <sop>)
   (<sop> ^_metadata.procedural <pid>)
-->
   (<s> ^smem-query-cue <cue>)
   (<cue> ^procedural <pid>)
}

sp {composite-operator*elaborate*map-id*procedural*query
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^smem-query-cue <scue>
	      ^retrieved-lti-cue <rlc>)
   (<rlc> ^cue <scue>
   	  ^retrieved-lti <lti>)
   (<scue> ^procedural <any>)
-->
   (<s> ^map-id <lti>)
}

#########################################################

sp {composite-operator*elaborate*not-tracking
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^desired <d>)
#	      -^problemspace learning)
   (<d> ^track-relation <dtr>)
   (<dtr> ^p1 <val1>
   	  ^p2 <val2>
	  ^relation <prep>)
  -{(<s> ^track-relation <tr>)
    (<tr> ^object1 <val3>
	 ^object2 <val4>
	 ^vpredicate <prep>
	 ^complete success)
   (<val1> ^focus <focus1>)
   (<val2> ^focus <focus2>)
   (<val3> ^focus <focus1>)
   (<val4> ^focus <focus2>)}
-->
   (<s> ^not-tracking <dtr>)
}

sp {composite-operator*elaborate*not-achieved
   (state <s> ^problemspace action
   	      ^action-type composite
	      ^desired <d>)
#	      -^problemspace learning)
   (<d> ^achieve-state <dtr>)
   (<dtr> ^p1 <val1>
	  ^state <state-name>)
  -{(<s> ^<state-name> <obj>)
   (<val1> ^focus <focus1>)
   (<obj> ^focus <focus1>)}
-->
   (<s> ^not-achieved-state <dtr>)
}
