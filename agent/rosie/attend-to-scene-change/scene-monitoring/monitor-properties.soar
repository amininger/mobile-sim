##################################################################
#
# Monitoring for object properties
#
##################################################################


sp {topstate*elaborate*scene-monitor*property
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>)
   (<obj> ^perception-obj.<prop-name> <prop>)
   (<prop> ^type {<type> << visual state measurable >>})
-->
   (<obj> ^property <p>)
   (<p> ^name <prop-name>
        ^type <type>
        ^svs-prop <prop>)
}

sp {topstate*elaborate*scene-monitor*wm-prop
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>
          ^wm-obj.property <wm-prop>)
   (<prop> ^name <prop-name>)
   (<wm-prop> ^name <prop-name>)
-->
   (<prop> ^wm-prop <wm-prop>)
}

sp {topstate*elaborate*scene-monitor*hypothesis*visual
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^type << visual measurable >>
           ^svs-prop.{<label> <> type <> feature-val} {<conf> > .1})
-->
   (<prop> ^hypothesis <h>)
   (<h> ^label <label>
        ^conf <conf>)
}

sp {topstate*elaborate*scene-monitor*hypothesis*state
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^type state
           ^svs-prop.value <label>)
-->
   (<prop> ^hypothesis <h>)
   (<h> ^label <label>
        ^conf 1.0)
}

sp {topstate*elaborate*scene-monitor*hypothesis*best
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^hypothesis <h1>
          -^hypothesis.conf > <best>)
   (<h1> ^conf <best>)
-->
   (<h1> ^best true)
}

sp {topstate*elaborate*scene-monitor*hypothesis*lower-threshold
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^hypothesis <h>)
   (<h> ^best true
        ^conf <conf>)
-->
   (<h> ^lower-threshold (* <conf> .8))
}

sp {topstate*elaborate*scene-monitor*hypothesis*upper-threshold
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^hypothesis <h>)
   (<h> ^best true
        ^conf <conf>)
-->
   (<h> ^update-when-below (* <conf> .95))
}

sp {topstate*elaborate*scene-monitory*case*none*no-hypothesis
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> -^hypothesis)
-->
   (<prop> ^case none)
}

#sp {topstate*elaborate*scene-monitor*case*none*low*best
#   (state <s> ^topstate <s>
#              ^scene-monitor.object.property <prop>)
#   (<prop> ^hypothesis <h>)
#   (<h> ^best true
#        ^conf < .05)
#-->
#   (<prop> ^case none)
#}

sp {topstate*elaborate*scene-monitor*case*uncertain
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^hypothesis <h1>
           ^hypothesis {<h2> <> <h1>})
   (<h1> ^best true
         ^lower-threshold <thresh>)
   (<h2> ^conf > <thresh>)
-->
   (<prop> ^case uncertain)
}

sp {topstate*elaborate*scene-monitor*case*certain
   (state <s> ^topstate <s>
              ^scene-monitor.object.property <prop>)
   (<prop> ^hypothesis <h1>)
   (<h1> ^best true
         ^lower-threshold <thresh>)
   -{(<prop> ^hypothesis {<h2> <> <h1>})
     (<h2> ^conf > <thresh>)}
-->
   (<prop> ^case certain)
}

############################################################################################
# Change info for properties
#############################################################################################

sp {topstate*elaborate*scene-changes*change-info*properties
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes.change-info <info>)
-->
   (<info> ^change <chg-prop> <higher-conf> <diff-best> <new-prop> <diff-fv>)
   (<chg-prop> ^name changed-property
               ^op-name attend-to-changed-property)
   (<higher-conf> ^name higher-confidence
                  ^op-name attend-to-higher-confidence)
   (<diff-best> ^name different-best
                ^op-name attend-to-different-best)
   (<new-prop> ^name new-property
               ^op-name attend-to-new-property)
   (<diff-fv> ^name different-feature-val
              ^op-name attend-to-different-feature-val)
}


############################################################################################
# Change: changed-property
#   Happens when the svs link reports something different about a property than we last noticed
#############################################################################################
sp {monitor-scene-changes*elaborate*scene-changes*changed-property
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^scene-monitor.scene-changes <sc>)
   (<obj> ^property <prop>
          ^differences.is-occluded false)
   (<prop> ^wm-prop <wm-prop>
           ^case <> <case-type>)
   (<wm-prop> ^prev-case <case-type>)
-->
   (<sc> ^change <change>)
   (<change> ^type changed-property
             ^object <obj>
             ^property <prop>)
}

###########################################################################
#
# Change: higher-confidence
#   When the confidence for a certain label increases 
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*higher-confidence
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>
          ^differences.is-occluded false)
   (<prop> ^wm-prop <wm-prop>
           ^case certain
           ^hypothesis <h>)
   (<wm-prop> ^value.confidence <conf>
              ^value.label <label>)
   (<h> ^label <label>
        ^update-when-below {<low> > <conf>}
        ^conf <new-conf>)
-->
   (<sc> ^change <change>)
   (<change> ^type higher-confidence
             ^object <obj>
             ^property <prop>
             ^new-confidence <new-conf>)
}

###########################################################################
#
# Change: different-best
#   When a certain label changes values
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*different-best
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>
          ^differences.is-occluded false)
   (<prop> ^wm-prop <wm-prop>
           ^hypothesis <h>
           ^svs-prop <svs-prop>
           ^case certain)
   (<wm-prop> ^prev-case certain
              ^value.label <label>)
   (<h> ^best true
        ^label <> <label>)
-->
   (<sc> ^change <change>)
   (<change> ^type different-best
             ^object <obj>
             ^property <prop>
             ^best-hyp <h>)
}

###########################################################################
#
# Change: new property
#   When a new property appears for the object
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*new-property
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>
          ^differences.is-occluded false)
   (<prop> ^svs-prop <svs-prop>
          -^wm-prop <wm-prop>)
-->
   (<sc> ^change <change>)
   (<change> ^type new-property
             ^object <obj>
             ^property <prop>)
}

###########################################################################
#
# Change: different-feature-val
#   When measurable property value changes, update
#
############################################################################

sp {monitor-scene-changes*elaborate*scene-change*different-feature-val
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>
              ^io.input-link.self.action wait)
   (<obj> ^property <prop>
          ^differences.is-occluded false)
   (<prop> ^type measurable
           ^svs-prop.feature-val <val>
          -^wm-prop.feature-val <val>)
-->
   (<sc> ^change <change>)
   (<change> ^type different-feature-val
             ^object <obj>
             ^property <prop>)
}