#### create new mapping in semantic memory for the new verb argument structure

sp {create-new-mapping*elaborate*state
   (state <s> ^name create-new-mapping	
   	      ^superstate.operator <sop>)
   (<sop> ^name create-new-mapping
   	  ^cue <cue>)
-->
   (<s> ^cue <cue>
   	^op_name op_
	^argument argument)
}


sp {create-new-mapping*store*mapping
   (state <s> ^name create-new-mapping	
   	      ^cue <cue>
   	      ^smem.command <scomm>
	      ^op_name <op-name>)
-->
   (<s> ^mapping <map>)
   (<map> ^type action
   	  ^procedural <proc>
	  ^linguistic <cue>)
   (<proc> ^op_name (make-constant-symbol <op-name>))
   (<scomm> ^store <map> <proc> <cue>)
}

sp {create-new-mapping*store*linguistic*childern
   (state <s> ^name create-new-mapping	
   	      ^cue <cue>
   	      ^smem.command <scomm>)
   (<cue> ^{<any> <> verb} <child>)
-->
   (<scomm> ^store <child>)
}

sp {create-new-mapping*direct-object*mapping
   (state <s> ^name create-new-mapping	
   	      ^cue <cue>
   	      ^smem.command <scomm>
	      ^mapping.procedural <proc>
	      ^argument <argument>)
   (<cue> ^direct-object <val>)
-->
   (<proc> ^(make-constant-symbol <argument>) <val>)
   (<scomm> ^store <proc>)
}

sp {create-new-mapping*pp-object*mapping*object
   (state <s> ^name create-new-mapping	
	      ^cue <cue>
   	      ^smem.command <scomm>
	      ^mapping.procedural <proc>
	      ^argument <argument>)
   (<cue> ^pp-object <val>)
   (<val> ^object <obj>)
-->
   (<proc> ^(make-constant-symbol <argument>) <nval>)
   (<nval> ^argument <obj>)
   (<scomm> ^store <proc>
   	    ^store <nval>
	    ^store <obj>)
}

sp {create-new-mapping*pp-object*mapping*preposition
   (state <s> ^name create-new-mapping	
	      ^cue <cue>
   	      ^smem.command <scomm>
	      ^mapping.procedural <proc>)
   (<cue> ^pp-object <val>)
   (<val> ^object <obj>
   	  ^preposition <prep>)
   (<proc> ^<any> <nval>)
   (<nval> ^argument <obj>)
-->
   (<nval> ^relation <prep>)
   (<scomm> ^store <prep>)
}

sp {create-new-mapping*goal*mapping
   (state <s> ^cue <cue>
   	      ^smem.command <scomm>
	      ^mapping <map>)
-->
   (<map> ^goal <goal>)
   (<scomm> ^store <proc> <goal>)
}

sp {create-new-mapping*action-space*mapping
   (state <s> ^cue <cue>
   	      ^smem.command <scomm>
	      ^mapping <map>)
-->
   (<map> ^action-space <act>)
   (<scomm> ^store <act>)
}