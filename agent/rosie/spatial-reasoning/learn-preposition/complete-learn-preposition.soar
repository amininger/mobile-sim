
sp {learn-preposition*propose*complete-learn-preposition*direct
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^superstate.superstate <sss>
              ^stat default
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> ^axis <axis> ^dist <dist>
        -^type x-aligned
        -^type y-aligned
        -^type z-aligned)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>)
-->
   (<p1> ^relation <r1>)
   (<r1> ^type <t> ^axis <axis> ^dist <dist> ^count 1 ^sum <dist> 
         ^squaredsum (* <dist> <dist>) ^avg <dist> ^top 100 ^bottom 0)
   (<sc> ^store <r1>)
   (<s> ^operator <o> + =)
   (<o> ^name complete-learn-preposition
        ^category svs
        ^type new-add)
}

sp {learn-preposition*propose*remove-relation
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^superstate.superstate <sss>
              ^label-svs <l>)
   (<l> ^result.type x-aligned ^result.type y-aligned ^result.type z-aligned)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>)
   (<p1> ^all-aligned {<val> false})
-->
   (<s> ^operator <o> + =)
   (<o> ^name remove-relation
        ^remove <val>
        ^category svs)
}

sp {learn-preposition*apply*remove-relation
   (state <s> ^name learn-preposition
              ^predicate <p1>
              ^operator <o>)
   (<o> ^name remove-relation
        ^remove <val>)
-->
   (<p1> ^all-aligned <val> -)
   (<p1> ^all-aligned true)
}


sp {learn-preposition*propose*add-to-relation*new-filter
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^superstate.superstate <sss>
              ^stat old
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> ^axis <axis> ^dist <dist>
        -^type x-aligned
        -^type y-aligned
        -^type z-aligned)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>
         ^relation <r1>)
   (<r1> ^axis <axis> -^type <t> -^dist <dist>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^dist <dist>
        ^type <t>
        ^category svs)
}

sp {learn-preposition*propose*add-to-relation*update-filter-type
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^superstate.superstate <sss>
              ^stat old
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> ^axis <axis> ^dist <dist>
        -^type x-aligned
        -^type y-aligned
        -^type z-aligned)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>
         ^relation <r1>)
   (<r1> ^axis <axis> -^type <t> ^dist <dist>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^type <t>
        ^category svs)
}

sp {learn-preposition*propose*add-to-relation*update-filter-distance
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^superstate.superstate <sss>
              ^stat old
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> ^axis <axis> ^dist <dist>
        -^type x-aligned
        -^type y-aligned
        -^type z-aligned)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>
         ^relation <r1>)
   (<r1> ^axis <axis> ^type <t> -^dist <dist>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^dist <dist>
        ^category svs)
}
sp {learn-preposition*apply*add-to-relation
   (state <s> ^name learn-preposition
              ^smem.command <sc>
              ^predicate <p1>
              ^operator <o>)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^dist <dist>
        ^type <t>)
   (<r1> ^count {<count> > 0} ^sum <sum> ^squaredsum <sqsum> ^avg <avg> ^top <top> ^bottom <bot>)
-->
   (<r1> ^count <count> -)
   (<r1> ^sum <sum> -)
   (<r1> ^avg <avg> -)
   (<r1> ^top <top> -)
   (<r1> ^bottom <bot> -)
   (<r1> ^squaredsum <sqsum> -)
   (<r1> ^dist <dist> 
         ^type <t>
         ^count (+ 1 <count>) 
         ^sum (+ <sum> <dist>) 
         ^squaredsum (+ <sqsum> (* <dist> <dist>))
         ^avg (/ (+ <sum> <dist>) (+ 1 <count>))
         ^top  (+ (/ (+ <sum> <dist>) (+ 1 <count>)) 
                  (* 1.5 (sqrt (- (/ (+ <sqsum> (* <dist> <dist>)) <count>) 
                           (* (/ (+ 1 <count>) <count>) (* (/ (+ <sum> <dist>) (+ 1 <count>))
                                                           (/ (+ <sum> <dist>) (+ 1 <count>))))))))
         ^bottom (- (/ (+ <sum> <dist>) (+ 1 <count>)) 
                  (* 1.5 (sqrt (- (/ (+ <sqsum> (* <dist> <dist>)) <count>) 
                           (* (/ (+ 1 <count>) <count>) (* (/ (+ <sum> <dist>) (+ 1 <count>))
                                                           (/ (+ <sum> <dist>) (+ 1 <count>)))))))))
    (<sc> ^store <r1>)
}


sp {learn-preposition*apply*add-to-relation*count-zero
   (state <s> ^name learn-preposition
              ^smem.command <sc>
              ^predicate <p1>
              ^operator <o>)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^dist <dist>
        ^type <t>)
   (<r1> ^count {<count> 0} ^sum <sum> ^squaredsum <sqsum> ^avg <avg> ^top <top> ^bottom <bot>)
-->
   (<r1> ^count <count> -)
   (<r1> ^sum <sum> -)
   (<r1> ^avg <avg> -)
   (<r1> ^top <top> -)
   (<r1> ^bottom <bot> -)
   (<r1> ^squaredsum <sqsum> -)
   (<r1> ^dist <dist> 
         ^type <t>
         ^count (+ 1 <count>) 
         ^sum (+ <sum> <dist>) 
         ^squaredsum (+ <sqsum> (* <dist> <dist>))
         ^avg (/ (+ <sum> <dist>) (+ 1 <count>))
         ^top (* 2 <dist>)
         ^bottom 0)
    (<sc> ^store <r1>)
}

sp {learn-preposition*apply*add-to-relation*no-type
   (state <s> ^name learn-preposition
              ^smem.command <sc>
              ^predicate <p1>
              ^operator <o>)
   (<o> ^name add-to-relation
        ^relation <r1>
       -^type
        ^dist <dist>)
   (<r1> ^count <count> ^sum <sum> ^squaredsum <sqsum> ^avg <avg> ^top <top> ^bottom <bot>)
-->
   (<r1> ^count <count> -)
   (<r1> ^sum <sum> -)
   (<r1> ^top <top> -)
   (<r1> ^bottom <bot> -)
   (<r1> ^avg <avg> -)
   (<r1> ^squaredsum <sqsum> -)
   (<r1> ^dist <dist> 
         ^count (+ 1 <count>) 
         ^sum (+ <sum> <dist>) 
         ^squaredsum (+ <sqsum> (* <dist> <dist>))
         ^avg (/ (+ <sum> <dist>) (+ 1 <count>))
         ^top  (+ (/ (+ <sum> <dist>) (+ 1 <count>)) 
                  (* 1.5 (sqrt (- (/ (+ <sqsum> (* <dist> <dist>)) <count>) 
                           (* (/ (+ 1 <count>) <count>) (* (/ (+ <sum> <dist>) (+ 1 <count>))
                                                           (/ (+ <sum> <dist>) (+ 1 <count>))))))))
         ^bottom (- (/ (+ <sum> <dist>) (+ 1 <count>)) 
                  (* 1.5 (sqrt (- (/ (+ <sqsum> (* <dist> <dist>)) <count>) 
                           (* (/ (+ 1 <count>) <count>) (* (/ (+ <sum> <dist>) (+ 1 <count>))
                                                           (/ (+ <sum> <dist>) (+ 1 <count>)))))))))
   (<sc> ^store <r1>)
}

sp {learn-preposition*apply*add-to-relation*no-distance
   (state <s> ^name learn-preposition
              ^smem.command <sc>
              ^predicate <p1>
              ^operator <o>)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^type <t>
       -^dist)
-->
   (<r1> ^type <t>)
   (<sc> ^store <r1>)
}

sp {learn-preposition*propose*complete-learn-preposition*aligned
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^stat default
              ^superstate.superstate <sss>
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> << x-aligned z-aligned y-aligned >>
        ^axis <axis> ^dist <dist>)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>)
-->
   (<p1> ^relation <r1>)
   (<r1> ^type <t> ^axis <axis> ^count 0 ^sum 0 ^squaredsum 0 ^avg 0 ^top 100 ^bottom 0)
   (<sc> ^store <r1>)
   (<s> ^operator <o> + =)
   (<o> ^name complete-learn-preposition
        ^category svs
        ^type new-add)
}

sp {learn-preposition*propose*add-to-relation*aligned
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <objs>
              ^smem.command <sc>
              ^stat old
              ^superstate.superstate <sss>
              ^label-svs <l>)
   (<l> ^result <r>)
   (<r> ^type <t> << x-aligned z-aligned y-aligned >>
        ^axis <axis> ^dist <dist>)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>
         ^relation <r1>)
   (<r1> ^axis <axis> -^type <t>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-to-relation
        ^relation <r1>
        ^type <t>
        ^category svs)
}



sp {learn-preposition*propose*complete-learn-preposition*update
   (state <s> ^name learn-preposition
              ^superstate.operator.message.fields.objects <obj>
              ^stat old)
-->
   (<s> ^operator <o> +)
   (<o> ^name complete-learn-preposition
        ^category svs
        ^type old)
}

#sp {learn-preposition*propose*complete-learn-preposition*error
#   (state <s> ^name learn-preposition
#              ^superstate.operator.message.fields.objects <objs>
#              ^label-svs <l>)
#   (<l> ^done true)
#   (<objs> ^type <type>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name complete-learn-preposition
#        ^category svs
#        ^type false)
#}

sp {learn-preposition*apply*complete-learn-preposition*update*performed-event
   (state <s> ^name learn-preposition
              ^operator.name complete-learn-preposition
              ^topstate.interaction.status <status>
              ^smem.command <sc>
             -^stat default
              ^superstate.operator.message.fields.objects <objs>
#              ^io.output-link <ol>
              ^superstate <ss>)
   (<ss> ^operator.message <m>)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>)
   (<ss> ^superstate <sss>)
-->
   (<sc> ^store <p1>)
   (<status> ^performed.learning-event.type preposition)
#   (<ol> ^send-message <msg>)
#   (<msg> ^type confirmation)
}

sp {learn-preposition*apply*complete-learn-preposition*new*performed-event
   (state <s> ^name learn-preposition
              ^operator.name complete-learn-preposition
              ^topstate.interaction.status <status>
              ^smem.command <sc>
              ^stat default
              ^topstate <ts>
              ^prep-list <p>
              ^topstate.prepositions <preps>
              ^superstate.operator.message.fields.objects <objs>
#              ^io.output-link <ol>
              ^superstate <ss>)
   (<ss> ^operator.message <m>)
   (<objs> ^type <type>)
   (<s> ^predicate <p1>)
   (<p1> ^name <type>) 
   (<ss> ^superstate <sss>)
-->
   (<p> ^prep <type>)
   (<p1> ^prep-name <type>)
   (<preps> ^prep.name <type>)
   (<sc> ^store <p1> ^store <p>)  
   (<status> ^performed.learning-event.type preposition)
#   (<ol> ^send-message <msg>)
#   (<msg> ^type confirmation)
}

sp {learn-preposition*apply*complete-learn-preposition*store*object
   (state <s> ^name learn-preposition
              ^operator.name complete-learn-preposition
              ^topstate.smem.command <cmd>
              ^superstate.purpose.parameters.indexable <i>)
   (<i> ^type object
        ^result.smem-rep <rep>)
-->
   (<cmd> ^store <rep>)
}