
sp {fuckingpreferencerule*e
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name action ^indexed-action)
   (<o2> ^name satisfy-purpose)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {list-games*propose*find-games
   (state <s> ^name list-games
             -^result)
-->
   (<s> ^operator <o> + =)
   (<o> ^name find-games
        ^category svs)
}

sp {list-games*propose*complete-list
   (state <s> ^name list-games
              ^result)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-list
        ^category svs)
}

sp {list-games*elaborate*results
   (state <s> ^name list-games
              ^field <f>
              ^result <r>)
   (<r> ^game <g>)
-->
   (<f> ^game <g>)
}

sp {list-games*apply*find-games
   (state <s> ^name list-games
              ^operator.name find-games
              ^smem.command <sc>)
-->
   (<sc> ^query <q>)
   (<q> ^list games)
}

sp {list-games*apply*complete-list*solved
   (state <s> ^name list-games
              ^field <f>
              ^topstate.status <status>
              ^io.output-link <out>
              ^operator.name complete-list)
-->
   (<status> ^performed.action-event.type list-games) 
   (<out> ^send-message <msg>)
   (<msg> ^type list-games
          ^fields.objects <f>)
}

sp {list-games*query*success
   (state <s> ^name list-games
              ^operator.name find-games
              ^smem.result.success <cue>
              ^smem.result <res>)
   (<res> ^retrieved <ret>)
-->
   (<s> ^result <ret>)
   (<s> ^field <f>)
}

#sp {list-games*query*elaborate*prohibits
#   (state <s> ^name list-games
#              ^operator.name find-game
#              ^smem.command <sc>
#              ^prohibit <ret>)
#-->
#   (<sc> ^prohibit <ret>)
#}

sp {list-games*query*failure
   (state <s> ^name list-games
              ^operator.name find-games
              ^smem.result.failure <cue>)
-->
   (<s> ^result none)
}