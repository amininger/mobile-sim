

# TODO DO all parameter match at once, need to do in beginning, and will save on computation
sp {parameter-match*elaborate*copy-operator-attr*params
   (state <s> ^name parameter-match
              ^superstate.operator <o>)
   (<o> ^name parameter-match
        ^goal-param <gp>
        ^failure-param <fp>
        ^action-param <ap>)
-->
   (<s> ^param <fp>
        ^param <gp>
        ^param <ap>)
}
sp {parameter-match*elaborate*copy-operator-attr*args
   (state <s> ^name parameter-match
              ^superstate.operator <o>)
   (<o> ^name parameter-match
        ^player-args.{<arg1> << 1 2 >>}.<< goal-args action-args failure-args >> <pa>)
-->
   (<s> ^param-args <pa>)
}


sp {parameter-match*elaborate*parameter-args
   (state <s> ^name parameter-match
              ^param-args <pa>
              ^param <p>)
   (<p> ^{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <parg> ^type <type>)
   (<parg> ^conditions <cond> ^parameters <para> ^cond-args <ca>)
   (<pa> ^type <type>)
-->
   (<pa> ^<arg> <b>)
   (<b> ^conds <cond> ^params <para> ^cond-args <ca>)
}


sp {parameter-match*elaborate*args
   (state <s> ^name parameter-match
              ^param-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <pa>)
   (<pa> ^conds <c> ^params <p>)
   (<p> ^{<arg2> << 1 2 3 4 5 6 7 8 9 10 >>} <p1>)
   (<p1> ^type <param> -^both true)
   (<c> ^<arg2> <conda>)
-->
   (<pa> ^<arg2> <a>)
   (<a> ^objd <objd>
        ^cond <conda>
        ^param <param>)
   (<objd> ^word object)
}

sp {parameter-match*elaborate*args*both
   (state <s> ^name parameter-match
              ^param-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <pa>)
   (<pa> ^conds <c> ^params <p>)
   (<p> ^{<arg2> << 1 2 3 4 5 6 7 8 9 10 >>} <p1>)
   (<p1> ^type {<param> << location >> } ^both true ^type {<param2> <> <param>})
   (<c> ^<arg2> <conda>)
-->
   (<pa> ^<arg2> <a>)
   (<a> ^objd <objd>
        ^cond <conda>
        ^param <param2>
        ^param <param>)
   (<objd> ^word object)
}

sp {parameter-match*elaborate*object-desc
   (state <s> ^name parameter-match
              ^param-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<a> ^objd <objd>
        ^cond <conda>)
   (<conda> ^attribute.<type> <atr>)
-->
   (<objd> ^word <atr>)
}

#todo spatial concepts for non player pieces
sp {parameter-match*elaborate*object-desc*concept
   (state <s> ^name parameter-match
              ^superstate.player-pieces.<num> <pp>
              ^param-args <pa>)
   (<pa> ^{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a> ^num <num>)
   (<a> ^objd <objd>
        ^cond <conda>)
   (<pp> ^name <cname> ^concept.attribute.<type> <atr>)
   (<conda> ^concept.name <cname>)
-->
   (<objd> ^word <atr>)
}

sp {parameter-match*propose*index-parameter
   (state <s> ^name parameter-match
              ^param-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <pam>)
   (<pam> ^objd <objd> -^obj <objs>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name index-parameter 
        ^parameter <pa>)
   (<pa> ^index-info <ii> ^lexical <objd> ^type object)
   (<ii> ^infer-match false ^return-all true ^use-interaction false)
}

sp {parameter-match*apply*index-parameter
   (state <s> ^name parameter-match
              ^operator <o>
              ^param-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^topstate.object <obj>)
   (<a> ^param <param> ^objd <objd> -^obj <obj>)
   (<o> ^name index-parameter
        ^parameter.lexical <objd2>
        ^parameter.result.id <id>)
   (<obj> ^id <id> ^category <param>)
 -{(<objd2> ^word <word>)
   (<objd> -^word <word>)}
 -{(<objd2> -^word <word2>)
   (<objd> ^word <word2>)}
-->
   (<a> ^obj <obj>)
}


sp {parameter-match*propose*complete-matches
   (state <s> ^name parameter-match)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-matches)
}
sp {parameter-match*apply*complete-matches
   (state <s> ^name parameter-match
              ^superstate <ss>
              ^operator <o>)
   (<o> ^name complete-matches)
-->
   (<ss> ^parameter-match complete)
}