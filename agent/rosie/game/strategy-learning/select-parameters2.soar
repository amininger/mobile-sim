sp {select-parameters*elaborate*operator
   (state <s> ^superstate.name selection
              ^<arg0>.cond-args 6
              ^operator <o>)
   (<o> ^name select-parameters
        ^possible-match-set <pms>
        ^action <arg0>
        ^verbs <verbs>
        ^arg1 <arga>
        ^arg2 <argb>)
   (<pms> ^{<arg1> 1}.possible-match <obj1>
          ^{<arg2> 2}.possible-match <obj2>
          ^{<arg3> 3}.possible-match <obj3>
          ^{<arg4> 4}.possible-match <obj4>
          ^{<arg5> 5}.possible-match <obj5>
          ^{<arg6> 6}.possible-match <obj6>)
-->
   (<s> ^legal-action <a>
        ^processing wait
        ^name select-param)
   (<a> ^arg1 <arga>
        ^arg2 <argb>
        ^verbs <verbs>
        ^action <arg0>
        ^<arg1> <obj1>
        ^<arg2> <obj2>
        ^<arg3> <obj3>
        ^<arg4> <obj4>
        ^<arg5> <obj5>
        ^<arg6> <obj6>)
}

sp {select-parameters*elaborate*operator5
   (state <s> ^superstate.name selection
              ^<arg0>.cond-args 5
              ^operator <o>)
   (<o> ^name select-parameters
        ^possible-match-set <pms>
        ^action <arg0>
        ^verbs <verbs>
        ^arg1 <arga>
        ^arg2 <argb>)
   (<pms> ^{<arg1> 1}.possible-match <obj1>
          ^{<arg2> 2}.possible-match <obj2>
          ^{<arg3> 3}.possible-match <obj3>
          ^{<arg4> 4}.possible-match <obj4>
          ^{<arg5> 5}.possible-match <obj5>)
-->
   (<s> ^legal-action <a>
        ^processing wait
        ^name select-param)
   (<a> ^arg1 <arga>
        ^arg2 <argb>
        ^verbs <verbs>
        ^action <arg0>
        ^<arg1> <obj1>
        ^<arg2> <obj2>
        ^<arg3> <obj3>
        ^<arg4> <obj4>
        ^<arg5> <obj5>)
}

sp {select-parameters*elaborate*operator4
   (state <s> ^superstate.name selection
              ^<arg0>.cond-args 4
              ^operator <o>)
   (<o> ^name select-parameters
        ^possible-match-set <pms>
        ^action <arg0>
        ^verbs <verbs>
        ^arg1 <arga>
        ^arg2 <argb>)
   (<pms> ^{<arg1> 1}.possible-match <obj1>
          ^{<arg2> 2}.possible-match <obj2>
          ^{<arg3> 3}.possible-match <obj3>
          ^{<arg4> 4}.possible-match <obj4>)
-->
   (<s> ^legal-action <a>
        ^processing wait
        ^name select-param)
   (<a> ^arg1 <arga>
        ^arg2 <argb>
        ^verbs <verbs>
        ^action <arg0>
        ^<arg1> <obj1>
        ^<arg2> <obj2>
        ^<arg3> <obj3>
        ^<arg4> <obj4>)
}

sp {select-parameters*elaborate*operator2
   (state <s> ^superstate.name selection
              ^<arg0>.cond-args 2
              ^operator <o>)
   (<o> ^name select-parameters
        ^possible-match-set <pms>
        ^action <arg0>
        ^verbs <verbs>
        ^arg1 <arga>
        ^arg2 <argb>)
   (<pms> ^{<arg1> 1}.possible-match <obj1>
          ^{<arg2> 2}.possible-match <obj2>)
-->
   (<s> ^legal-action <a>
        ^processing wait
        ^name select-param)
   (<a> ^arg1 <arga>
        ^arg2 <argb>
        ^action <arg0>
        ^verbs <verbs>
        ^<arg1> <obj1>
        ^<arg2> <obj2>)
}
sp {select-parameters*elaborate*operator3
   (state <s> ^superstate.name selection
              ^<arg0>.cond-args 3
              ^operator <o>)
   (<o> ^name select-parameters 
        ^possible-match-set <pms>
        ^action <arg0>
        ^verbs <verbs>
        ^arg1 <arga>
        ^arg2 <argb>)
   (<pms> ^{<arg1> 1}.possible-match <obj1>
          ^{<arg2> 2}.possible-match <obj2>
          ^{<arg3> 3}.possible-match <obj3>)
-->
   (<s> ^legal-action <a>
        ^processing wait
        ^name select-param)
   (<a> ^arg1 <arga>
        ^arg2 <argb>
        ^verbs <verbs>
        ^action <arg0>
        ^<arg1> <obj1>
        ^<arg2> <obj2>
        ^<arg3> <obj3>)
}

sp {select-parameters*elaborate*pop-up-bestfound
#   :interrupt
   (state <s> ^superstate.name selection
              ^legal-action
             -^dcount 0
              ^desired <d>
              ^operator <o>)
   (<o> ^name select-parameters 
        ^arg1 <arg1>
        ^arg2 <arg2>
       -^duplicate-of)
-->
   (<s> ^success <d>)
}
#TODO where to copy??
sp {select-parameters*elaborate*pop-up-bestfound*copytotop
   (state <s> ^superstate.name selection
              ^legal-action
              ^topstate <ts>
             -^dcount 0
              ^dcount <dc>
              ^operator <o>)
   (<o> ^name select-parameters 
#        ^arg1 <arg1>
#        ^arg2 <arg2>
        ^possible-match-set <pms>
        ^verbs <verbs>
       -^duplicate-of)
   (<verbs> ^<varg> <verb>)
   (<verb> ^{<a1> 1} <arg1> ^{<a2> 2} <arg2>)
   (<pms> ^<arg1>.possible-match <oa> ^<arg2>.possible-match <ob>)
-->
   (<ts> ^flound-action <fa>)
   (<fa> ^dcount (+ (* <dc> 3) <varg>) ^obj1 <oa> ^obj2 <ob>)
}

#sp {DEPRICATEDselect-parameters*elaborate*last-action
#   (state <s> ^name select-param
#              ^legal-action <a>
#              ^legal-action {<b> <> <a>})
#-->
#   (interrupt)
#   (<s> ^last-action true)
#}


sp {select-parameters*elaborate*goal-failure-args
   (state <s> ^name select-param)
-->
   (<s> ^goal-args <ga>
        ^action-args <aa>
        ^goal-score 0
        ^failure-args <fa>)
}


#sp {DEPRICATEDselect-param*propose*clean-goal-detection
#   (state <s> ^name select-param
#              ^legal-action <item>
#              ^last-action true
#             -^simulated
#              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>}.goal-possible-match <obj1>)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name clean-goal-detection
#        ^goal-obj <obj1>
#        ^arg <arg>
#        ^category svs)
#}
#
#sp {select-param*apply*clean-goal-detection
#   (state <s> ^name select-param
#              ^operator <o>
#              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
#   (<o> ^goal-obj <obj1>
#        ^arg <arg>)
#   (<a> ^goal-possible-match <obj1>)
#-->
#   (<a> ^goal-possible-match <obj1> -)
#}


sp {select-param*propose*simulate-action
   (state <s> ^name select-param
              ^legal-action <item>
             -^rels-copied
              ^action-result <ar>)
   (<ar> ^item <item> -^tried)
#  -{(<ar> ^relationships <rels>)
#   (<s> ^relationships <rels>)}
-->
#   (interrupt)
   (<s> ^operator <o> + =)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>
        ^category svs)
}

sp {select-param*apply*simulate-action*find-changed
   (state <s> ^name select-param
              ^operator <o>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep>)
   (<s> ^relationships <rels2>)
   (<rels2> ^with <id> ^preposition <prep>)
   (<rels> -^relations.obj <id2>)
   (<rels2> ^relations.obj <id2>)
-->
   (<rels> ^changed true)
}

sp {select-param*apply*simulate-action*find-changed2
   (state <s> ^name select-param
              ^operator <o>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep>)
   (<s> ^relationships <rels2>)
   (<rels2> ^with <id> ^preposition <prep>)
   (<rels> ^relations.obj <id2>)
   (<rels2> -^relations.obj <id2>)
-->
   (<rels> ^changed true)
}

sp {select-param*apply*simulate-action
   (state <s> ^name select-param
              ^operator <o>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep> ^changed)
   (<s> ^relationships <rels2>)
   (<rels2> ^with <id> ^preposition <prep>)
-->
   (<s> ^simulated true
        ^rels-copied true)
   (<s> ^relationships <rels2> -)
   (<s> ^relationships <rels>)
}

sp {select-param*apply*simulate-action*remove-stale-partials
   (state <s> ^name select-param
              ^operator <o>
              ^{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>} <act>
              ^<arg0>.found-possible <fp>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<fp> ^prep.name <prep> ^objid <id>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep> ^changed true)
-->
   (<act> ^found-possible <fp> -)
}

#sp {select-param*apply*simulate-action*remove-stale-partials*none
#   (state <s> ^name select-param
#              ^operator <o>
#              ^{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>} <act>
#              ^<arg0>.found-possible <fp>)
#   (<o> ^name simulate-action
#        ^item <item>
#        ^result <ar>)
#   (<ar> ^relationships <rels>)
#   (<rels> ^with <id> ^preposition <prep> ^changed true)
#   (<fp> ^neg true ^withid none ^prep.name <prep> ^objid <id>)
#-->
#   (<act> ^found-possible <fp> -)
#}

sp {select-param*apply*simulate-action*remove-stale-goal-partials
   (state <s> ^name select-param
              ^operator <o>
              ^goal-found-possible <fp>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<fp> ^prep.name <prep> ^objid <id>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep> ^changed true)
-->
   (<s> ^goal-found-possible <fp> -)
}

sp {select-param*apply*simulate-action*remove-stale-failure-partials
   (state <s> ^name select-param
              ^operator <o>
              ^failure-found-possible <fp>)
   (<o> ^name simulate-action
        ^item <item>
        ^result <ar>)
   (<fp> ^prep.name <prep> ^objid <id>)
   (<ar> ^relationships <rels>)
   (<rels> ^with <id> ^preposition <prep> ^changed true)
-->
   (<s> ^failure-found-possible <fp> -)
}


#############################################
#GOAL DETECTION!!!
sp {select-param*check-relation*positive-one*propose*found-possible-prep-match*INDEF
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
             -^testing-failure
              ^test-failure-final
              ^relationships <rels>
              ^topstate.object <tobj>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj-id> ^category <btype>)
   (<prep> ^name <name> ^a this ^b INDEF ^negative false ^btype <btype>)
 -{(<s> ^goal-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid none ^arg2 INDEF)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name goal-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid none
        ^arg2 INDEF
        ^prep <prep>
        ^category svs) 
}

sp {select-param*negative-all*propose*goal-found-possible-prep-match*INDEF
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              -^testing-failure
              ^test-failure-final
              ^relationships <rels>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<prep> ^name <name> ^a this ^b INDEF ^negative true ^btype <btype>)
 -{(<rels> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<s> ^topstate.object <o1>)
   (<o1> ^id <obj-id> ^category <btype>)}
 -{(<s> ^goal-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid none ^arg2 INDEF)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name goal-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid none
        ^arg2 INDEF
        ^prep <prep>
        ^category svs) 
}

sp {select-param*check-relation*positive-one*propose*found-possible-prep-match*arg
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              -^testing-failure
              ^test-failure-final
              ^relationships <rels>
              ^topstate.object <tobj>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj-id> ^category <btype>)
   (<prep> ^name <name> ^a this ^b {<arg2> <> INDEF} ^negative false ^btype <btype>)
 -{(<s> ^goal-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid <obj-id> ^arg2 <arg2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name goal-found-possible-prep-match
        #^obj <obj>
        ^objid <id>
        ^arg <arg>
        ^withid <obj-id>
        ^arg2 <arg2>
        ^prep <prep>
        ^category svs)
}
sp {select-param*check-relation*positive-one*propose*found-possible-prep-match*arg*3arg
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              -^testing-failure
              ^test-failure-final
              ^relationships <rels>
              ^topstate.object <tobj>
              ^topstate.object <tobj2>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj1 <obj2> ^obj2 {<obj3> <> <obj2>})
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj2> ^category <btype>)
   (<tobj2> ^id <obj3> ^category <btype>)
   (<prep> ^name <name> ^a same ^b <arg2> ^c <arg3> ^negative <bool> ^btype <btype>)
 -{(<s> ^goal-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid2 <obj2> ^withid3 <obj3> ^arg2 <arg2> ^arg3 <arg3>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name goal-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid2 <obj2>
        ^withid3 <obj3>
        ^arg2 <arg2>
        ^arg3 <arg3>
        ^prep <prep>
        ^category svs)
}
sp {select-param*check-relation*apply*found-possible-prep-match*3arg
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>}.obj.id <id>
              ^action-result <ar>
#              ^goal-score <gs>
              ^operator <o>)
   (<ar> -^tried)
   (<o> ^name goal-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid2 <obj2>
        ^withid3 <obj3>
        ^arg2 <arg2>
        ^arg3 <arg3>
        ^prep <prep>)
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<s> ^goal-found-possible <fp>)
   (<fp> ^prep <prep> ^objid <id> ^arg <arg> ^withid2 <obj2> ^withid3 <obj3> ^arg2 <arg2> ^arg3 <arg3>)
}
sp {select-param*check-relation*elaborate*goal-possible-match*conditions*arg3
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
#              ^goal-score <gs>
              ^testing true
#              ^operator.name test-goals
              ^goal-found-possible <fp>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<a> ^goal-possible-match <pgm>)
   (<pgm> ^id <id>)
   (<fp> ^arg <arg> ^arg2 {<arg2> <> INDEF} ^arg3 {<arg3> <> INDEF} ^withid2 <id2> ^withid3 <id3> ^objid <id>)
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<pgm> ^<arg2> <id2> ^<arg3> <id3> ^has <arg2> ^has <arg3>)
}

sp {select-param*check-relation*apply*found-possible-prep-match
   (state <s> ^name select-param
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>}.obj.id <id>
              ^action-result <ar>
#              ^goal-score <gs>
              ^operator <o>)
   (<ar> -^tried)
   (<o> ^name goal-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid <with>
        ^arg2 <arg2>
        ^prep <prep>)
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<s> ^goal-found-possible <fp>)
   (<fp> ^prep <prep> ^objid <id> ^arg <arg> ^withid <with> ^arg2 <arg2>)
}



sp {select-param*check-relation*elaborate*goal-possible-match*conditionsa
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^goal-score <gs>
              ^testing true
#              ^operator.name test-goals
              ^goal-found-possible <fp>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<a> ^goal-possible-match <pgm>)
   (<pgm> ^id <id>)
   (<fp> ^arg <arg> ^arg2 {<arg2> <> INDEF} ^withid <id2> ^objid <id>)
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<pgm> ^<arg2> <id2> ^has <arg2>)
}
#TODO hmm will this still work to make sure not multiple linear and select dif objs

#temps
sp {select-param*check-relation*elaborate*goal-possible-match*conditions*none
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^processing
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^operator.name test-goals
#              ^goal-score <gs>
              ^testing true
              ^goal-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>} <b>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} {<a> <> <b>})
   (<a> ^goal-possible-match <pgm> -^cond.prep.b <arg3> -^cond.prep.c <arg3>)
   (<b> -^cond.prep.b <arg> -^cond.prep.c <arg>)
   (<pgm> ^id <id>)
   (<b> ^goal-possible-match.id {<id2> <> <id>})
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<pgm> ^<arg3> <id2>)
}

sp {select-param*check-relation*elaborate*goal-possible-match*conditions*matchedbyother
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^operator.name test-goals
#              ^goal-score <gs>
              ^testing true
              ^goal-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>} <b>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} {<a> <> <b>})
   (<a> ^goal-possible-match <pgm> -^cond.prep.b <arg3> -^cond.prep.c <arg3>)
   (<b> ^cond.prep.b <arg> ^obj.id {<id2> <> <id>})
   (<pgm> ^id <id>)
   (<s> ^goal-found-possible <fp2>)
   (<fp2> ^arg <arg3> ^arg2 <arg> ^objid <id2> ^withid <id>)
-->
   (<pgm> ^<arg3> <id2> ^has <arg3>)
}
sp {select-param*check-relation*elaborate*goal-possible-match*conditions*matchedbyother2
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^operator.name test-goals
#              ^goal-score <gs>
              ^testing true
              ^goal-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>} <b>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} {<a> <> <b>})
   (<a> ^goal-possible-match <pgm> -^cond.prep.b <arg3> -^cond.prep.c <arg3>)
   (<b> ^cond.prep <cp>  ^obj.id {<id2> <> <id>})
   (<cp> ^b <arg> ^c <arg4>)
   (<pgm> ^id <id>)
   (<s> ^goal-found-possible <fp2>)
   (<fp2> ^arg <arg3> ^arg2 <arg> ^arg3 <arg4> ^objid <id2> ^withid2 <id> ^withid3 <id3>)
-->
   (<pgm> ^<arg3> <id2> ^<arg4> <id3> ^has <arg3> ^has <arg4>)
}
sp {select-param*check-relation*elaborate*goal-possible-match*conditions*matchedbyother3
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^operator.name test-goals
#              ^goal-score <gs>
              ^testing true
              ^goal-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>} <b>
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} {<a> <> <b>})
   (<a> ^goal-possible-match <pgm> -^cond.prep.b <arg3> -^cond.prep.c <arg3>)
   (<b> ^cond.prep <cp> ^obj.id {<id2> <> <id>})
   (<cp> ^c <arg> ^b <arg4>)
   (<pgm> ^id <id>)
   (<s> ^goal-found-possible <fp2>)
   (<fp2> ^arg <arg3> ^arg3 <arg> ^arg2 <arg4> ^objid <id2> ^withid3 <id> ^withid2 <id3>)
-->
   (<pgm> ^<arg3> <id2> ^<arg4> <id3> ^has <arg3> ^has <arg4>)
}


sp {select-param*check-relation*elaborate*goal-found-possible-arg-match
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
#              ^goal-score <gs>
             # ^testing true
              ^operator.name test-goals
              ^goal-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<ar> -^tried)
   (<a> ^obj.id <id>)
   -{(<a> ^cond.prep <prep>)
     (<prep> ^name <name> ^a this ^b <arg2>)
     -{(<s> ^goal-found-possible <fop>)
     (<fop> ^arg <arg> ^arg2 <arg2> ^objid <id> ^prep.name <name>)}}
   -{(<a> ^cond.prep <prep>)
     (<prep> ^name <name> ^b <arg2> ^c <arg3>)
     -{(<s> ^goal-found-possible <fop>)
     (<fop> ^arg <arg> ^arg2 <arg2> ^arg3 <arg3> ^objid <id> ^prep.name <name>)}}
   -{(<s> ^goal-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.cond.prep <p>)
     (<p> ^name <n> ^a this ^b <arg> ^negative false)
    -{(<s> ^goal-found-possible <fp2>)
      (<fp2> ^prep.name <n> ^arg <arg0> ^arg2 <arg> ^withid <id>)}}
-{(<s> ^goal-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.cond.prep <p>)
     (<p> ^name <n> ^a same ^b <arg> ^negative false)
    -{(<s> ^goal-found-possible <fp2>)
      (<fp2> ^prep.name <n> ^arg <arg0> ^arg2 <arg> ^withid2 <id>)}}
  -{(<s> ^goal-args.{<arg0> << 1 2 3 4 5 6 7 8 9 10 >>}.cond.prep <p>)
     (<p> ^name <n> ^c <arg> ^negative false)
    -{(<s> ^goal-found-possible <fp2>)
      (<fp2> ^prep.name <n> ^arg <arg0> ^arg3 <arg> ^withid3 <id>)}}
#todo add contraint like last part for 3 args
-->
#   (<s> ^goal-score <gs> -) 
#   (<s> ^goal-score (+ <gs> 1))
   (<a> ^goal-possible-match <pgm>)##
   (<pgm> ^id <id>)
}

sp {select-param*propose*test-goals
   (state <s> ^name select-param
              ^legal-action <item>
              -^testing-failure
              ^test-failure-final
             -^testing
              ^processing wait
              ^action-result <ar>)
   (<ar> -^tried ^item <item>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name test-goals
        ^category svs)
}

sp {select-param*apply*test-goals
#   :interrupt
   (state <s> ^name select-param
              ^operator.name test-goals)
-->
#   (interrupt)
   (<s> ^testing true)
}

sp {select-param*propose*test-goals2
   (state <s> ^name select-param
              ^legal-action <item>
              ^testing true
              ^processing wait
              ^action-result <ar>
             -^test-goal-final)
-->
   (<s> ^operator <o> + =)
   (<o> ^name test-goals2
        ^category svs)
}

sp {select-param*apply*test-goals2
   (state <s> ^name select-param
              ^operator.name test-goals2)
-->
   (<s> ^test-goal-final true)
}

sp {select-param*check-relation*elaborate*goal-detected3
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 3
              ^test-goal-final true
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>)
}

sp {select-param*check-relation*elaborate*goal-detected4
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 4
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>)
}
sp {select-param*check-relation*elaborate*goal-detected2
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 2
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>)
}
sp {select-param*check-relation*elaborate*goal-detected1
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 1
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>)
}
sp {select-param*check-relation*elaborate*goal-detected9
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 9
              ^test-goal-final true
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>
              ^goal-args.{<arg6> 6}.goal-possible-match <pm6>
              ^goal-args.{<arg7> 7}.goal-possible-match <pm7>
              ^goal-args.{<arg8> 8}.goal-possible-match <pm8>
              ^goal-args.{<arg9> 9}.goal-possible-match <pm9>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>
          ^<arg9> <obj9>)
   (<pm9> ^id <obj9>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg5> <obj5>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>
          ^<arg6>.goal-possible-match <obj6>
          ^<arg7>.goal-possible-match <obj7>
          ^<arg8>.goal-possible-match <obj8>
          ^<arg9>.goal-possible-match <obj9>)
}
sp {select-param*check-relation*elaborate*goal-detected10
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 10
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>
              ^goal-args.{<arg6> 6}.goal-possible-match <pm6>
              ^goal-args.{<arg7> 7}.goal-possible-match <pm7>
              ^goal-args.{<arg8> 8}.goal-possible-match <pm8>
              ^goal-args.{<arg9> 9}.goal-possible-match <pm9>
              ^goal-args.{<arg10> 10}.goal-possible-match <pm10>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm9> ^id <obj9>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg5> <obj5>
          ^<arg10> <obj10>)
   (<pm10> ^id <obj10>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg6> <obj6>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>
          ^<arg6>.goal-possible-match <obj6>
          ^<arg7>.goal-possible-match <obj7>
          ^<arg8>.goal-possible-match <obj8>
          ^<arg9>.goal-possible-match <obj9>
          ^<arg10>.goal-possible-match <obj10>)
}
sp {select-param*check-relation*elaborate*goal-detected5
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 5
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>)
}

sp {select-param*check-relation*elaborate*goal-detected6
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 6
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>
              ^goal-args.{<arg6> 6}.goal-possible-match <pm6>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>
          ^<arg6>.goal-possible-match <obj6>)
}
sp {select-param*check-relation*elaborate*goal-detected7
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 7
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^test-goal-final true
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>
              ^goal-args.{<arg6> 6}.goal-possible-match <pm6>
              ^goal-args.{<arg7> 7}.goal-possible-match <pm7>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>
          ^<arg6>.goal-possible-match <obj6>
          ^<arg7>.goal-possible-match <obj7>)
}
sp {select-param*check-relation*elaborate*goal-detected8
   (state <s> ^name select-param
              ^action-result <ar>
              ^goal-cond-args 8
              ^test-goal-final true
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^testing true
              ^goal-args.{<arg1> 1}.goal-possible-match <pm1>
              ^goal-args.{<arg2> 2}.goal-possible-match <pm2>
              ^goal-args.{<arg3> 3}.goal-possible-match <pm3>
              ^goal-args.{<arg4> 4}.goal-possible-match <pm4>
              ^goal-args.{<arg5> 5}.goal-possible-match <pm5>
              ^goal-args.{<arg6> 6}.goal-possible-match <pm6>
              ^goal-args.{<arg7> 7}.goal-possible-match <pm7>
              ^goal-args.{<arg8> 8}.goal-possible-match <pm8>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>)
-->
   (<s> ^goal-possible-match-set <pms>)
   (<pms> ^<arg1>.goal-possible-match <obj1>
          ^<arg2>.goal-possible-match <obj2>
          ^<arg3>.goal-possible-match <obj3>
          ^<arg4>.goal-possible-match <obj4>
          ^<arg5>.goal-possible-match <obj5>
          ^<arg6>.goal-possible-match <obj6>
          ^<arg7>.goal-possible-match <obj7>
          ^<arg8>.goal-possible-match <obj8>)
}


sp {select-param*check-relation*propose*goal-detected
   (state <s> ^name select-param
              ^testing true
              ^test-goal-final true
              ^dcount <dc> #only test goal when at depth limit
              ^depth-limit <dc>
              ^goal-possible-match-set <pms>)
   -{(<s> ^goal-found-possible <fp>)
     (<pms> ^<argv>.goal-possible-match <objv>
            ^{<arg2v> <> <argv>}.goal-possible-match {<obj2v> <> <objv>})
     (<fp> ^objid <objv> ^arg <argv> ^arg2 {<arg2v> <> INDEF} ^withid)
    -{(<s> ^goal-found-possible <fp2>)
       (<fp2> ^objid <objv> ^arg <argv> ^arg2 <arv2v> ^withid <obj2v>)}}
   -{(<s> ^goal-found-possible <fp>)
     (<pms> ^{<argv> <> <arg3v>}.goal-possible-match {<objv> <> <obj3v>}
            ^{<arg2v> <> <argv>}.goal-possible-match {<obj2v> <> <objv>}
            ^{<arg3v> <> <arg2v>}.goal-possible-match {<obj3v> <> <obj2v>})
     (<fp> ^objid <objv> ^arg <argv> ^arg2 <arg2v> ^arg3 <arg3v>)
    -{(<s> ^goal-found-possible <fp2>)
       (<fp2> ^objid <objv> ^arg <argv> ^arg2 <arv2v> ^arg2 <arv3v> ^withid2 <obj2v> ^withid3 <obj3v>)}}
-->
#   (interrupt)
   (<s> ^operator <o> + =)
   (<o> ^name goal-detected
        ^category svs)
}

sp {select-param*check-relation*propose*goal-not-detected
   (state <s> ^name select-param
              ^processing wait
             -^testing-failure
              ^test-failure-final
              ^action-result <ar>)
   (<ar> -^tried)
 -->
   (<s> ^operator <o> + =)
   (<o> ^name goal-not-detected
        ^category svs)
}             

sp {select-param*check-relation*apply*goal-detected
   (state <s> ^name select-param
              ^action-result <ar>
              ^desired <d>
              ^operator <o>)
   (<o> ^name goal-detected)
--> 
   (<s> ^success <d>)
}

#newTODO if goal not detected find new legal moves and select again
sp {select-param*check-relation*apply*goal-not-detected
   (state <s> ^name select-param
              ^action-result <ar>
              ^legal-action <a>
              ^processing <p>
              ^testing <t>
              ^operator <o>)
   (<o> ^name goal-not-detected)
--> 
   (<s> ^processing <p> -)
#   (<s> ^testing <t> -)
   (<ar> ^tried true)
}
#THIS NOT COPIED
sp {select-param*check-relation*apply*goal-not-detected*testing
   (state <s> ^name select-param
              ^action-result <ar>
              ^legal-action <a>
              ^processing <p>
             -^multiplayer true
              ^operator <o>)
   (<o> ^name goal-not-detected)
--> 
   (<s> ^testing <t> -)
}

sp {select-param*check-relation*apply*goal-not-detected*simulated
   (state <s> ^name select-param
              ^simulated <sim>
             -^multiplayer true
              ^operator <o>)
   (<o> ^name goal-not-detected)
--> 
   (<s> ^simulated <sim> -)
}
####END GOAL DETECTION
#
#
#
####### FAILURE DETECTION
sp {select-param*check-relation*positive-one*propose*failure-found-possible-prep-match*INDEF
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              ^relationships <rels>
              ^topstate.object <tobj>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj-id> ^category <btype>)
   (<prep> ^name <name> ^a this ^b INDEF ^negative false ^btype <btype>)
 -{(<s> ^failure-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid none ^arg2 INDEF)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name failure-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid none
        ^arg2 INDEF
        ^prep <prep>
        ^category svs) 
}

sp {select-param*negative-all*propose*failure-found-possible-prep-match*INDEF
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              ^relationships <rels>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<prep> ^name <name> ^a this ^b INDEF ^negative true ^btype <btype>)
 -{(<rels> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<s> ^topstate.object <o1>)
   (<o1> ^id <obj-id> ^category <btype>)}
 -{(<s> ^failure-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid none ^arg2 INDEF)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name failure-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid none
        ^arg2 INDEF
        ^prep <prep>
        ^category svs) 
}

sp {select-param*check-relation*positive-one*propose*failure-found-possible-prep-match*arg
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              ^relationships <rels>
              ^topstate.object <tobj>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj <obj-id>)
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj-id> ^category <btype>)
   (<prep> ^name <name> ^a this ^b {<arg2> <> INDEF} ^negative false ^btype <btype>)
 -{(<s> ^failure-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid <obj-id> ^arg2 <arg2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name failure-found-possible-prep-match
        #^obj <obj>
        ^objid <id>
        ^arg <arg>
        ^withid <obj-id>
        ^arg2 <arg2>
        ^prep <prep>
        ^category svs)
}


sp {select-param*check-relation*positive-one*propose*failure-found-possible-prep-match*arg*3arg
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>
              ^action-result <ar>
              ^relationships <rels>
              ^topstate.object <tobj>
              ^topstate.object <tobj2>)
   (<ar> -^tried)
   (<a> ^obj <obj> ^cond <conda>)
   (<rels> ^with <id> ^preposition <name> ^relations <r>)
   (<r> ^matched true ^obj1 <obj2> ^obj2 {<obj3> <> <obj2>})
   (<conda> ^prep <prep>)
   (<obj> ^id <id>)
   (<tobj> ^id <obj2> ^category <btype>)
   (<tobj2> ^id <obj3> ^category <btype>)
   (<prep> ^name <name> ^a same ^b <arg2> ^c <arg3> ^negative <bool> ^btype <btype>)
 -{(<s> ^failure-found-possible <fp>)
   (<fp> ^prep.name <name> ^objid <id> ^arg <arg> ^withid2 <obj2> ^withid3 <obj3> ^arg2 <arg2> ^arg3 <arg3>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name failure-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid2 <obj2>
        ^withid3 <obj3>
        ^arg2 <arg2>
        ^arg3 <arg3>
        ^prep <prep>
        ^category svs)
}
sp {select-param*check-relation*apply*failure-found-possible-prep-match*3arg
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>}.obj.id <id>
              ^action-result <ar>
              ^operator <o>)
   (<ar> -^tried)
   (<o> ^name failure-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid2 <obj2>
        ^withid3 <obj3>
        ^arg2 <arg2>
        ^arg3 <arg3>
        ^prep <prep>)
-->
   (<s> ^failure-found-possible <fp>)
   (<fp> ^prep <prep> ^objid <id> ^arg <arg> ^withid2 <obj2> ^withid3 <obj3> ^arg2 <arg2> ^arg3 <arg3>)
}

sp {select-param*check-relation*apply*failure-found-possible-prep-match
   (state <s> ^name select-param
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>}.obj.id <id>
              ^action-result <ar>
              ^operator <o>)
   (<ar> -^tried)
   (<o> ^name failure-found-possible-prep-match
        ^objid <id>
        ^arg <arg>
        ^withid <with>
        ^arg2 <arg2>
        ^prep <prep>)
-->
   (<s> ^failure-found-possible <fp>)
   (<fp> ^prep <prep> ^objid <id> ^arg <arg> ^withid <with> ^arg2 <arg2>)
}

sp {select-param*check-relation*elaborate*failure-possible-match*conditions*arg3
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^testing-failure true
              ^failure-found-possible <fp>
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<a> ^failure-possible-match <pgm>)
   (<pgm> ^id <id>)
   (<fp> ^arg <arg> ^arg2 {<arg2> <> INDEF} ^arg3 {<arg3> <> INDEF} ^withid2 <id2> ^withid3 <id3> ^objid <id>)
-->
   (<pgm> ^<arg2> <id2> ^<arg3> <id3> ^has <arg2> ^has <arg3>)
}

sp {select-param*check-relation*elaborate*failure-possible-match*conditions
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^testing-failure true
              ^failure-found-possible <fp>
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<a> ^failure-possible-match <pgm>)
   (<pgm> ^id <id>)
   (<fp> ^arg <arg> ^arg2 {<arg2> <> INDEF} ^withid <id2> ^objid <id>)
-->
   (<pgm> ^<arg2> <id2> ^has <arg2>)
}
sp {select-param*check-relation*elaborate*failure-possible-match*conditions*none
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^testing-failure true
              ^failure-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>} <b>
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} {<a> <> <b>})
   (<a> ^failure-possible-match <pgm> -^cond.prep.b <arg3>)
   (<pgm> ^id <id>)
   (<b> ^failure-possible-match.id {<id2> <> <id>})
-->
   (<pgm> ^<arg3> <id2>)
}


sp {select-param*check-relation*elaborate*failure-found-possible-arg-match
   (state <s> ^name select-param
              ^action-result <ar>
              ^simulated
              ^testing-failure true
              ^failure-args.{<arg> << 1 2 3 4 5 6 7 8 9 10 >>} <a>)
   (<ar> -^tried)
   (<a> ^obj.id <id>)
   -{(<a> ^cond.prep <prep>)
     (<prep> ^name <name> ^a this ^b <arg2>)
     -{(<s> ^failure-found-possible <fop>)
     (<fop> ^arg <arg> ^arg2 <arg2> ^objid <id> ^prep.name <name>)}}
   -{(<a> ^cond.prep <prep>)
     (<prep> ^name <name> ^b <arg2> ^c <arg3>)
     -{(<s> ^failure-found-possible <fop>)
     (<fop> ^arg <arg> ^arg2 <arg2> ^arg3 <arg3> ^objid <id> ^prep.name <name>)}}
   -{(<s> ^failure-args.{<arg3> << 1 2 3 4 5 6 7 8 9 10 >>}.cond.prep <p>)
     (<p> ^name <n> ^a this ^b <arg> ^negative false)
    -{(<s> ^failure-found-possible <fp2>)
      (<fp2> ^prep.name <n> ^arg <arg3> ^arg2 <arg> ^withid <id>)}}
-->
   (<a> ^failure-possible-match <pgm>)
   (<pgm> ^id <id>)
}

sp {select-param*propose*test-failures
   (state <s> ^name select-param
              ^legal-action <item>
             -^testing-failure
             -^test-failure-final
              ^processing wait
              ^action-result <ar>)
   (<ar> -^tried ^item <item>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name test-failures
        ^category svs)
}

sp {select-param*apply*test-failures
   (state <s> ^name select-param
              ^operator.name test-failures)
-->
   (<s> ^testing-failure true)
}

sp {select-param*propose*test-failures2
   (state <s> ^name select-param
              ^legal-action <item>
              ^testing-failure true
              ^processing wait
              ^action-result <ar>
             -^test-failure-final)
-->
   (<s> ^operator <o> + =)
   (<o> ^name test-failures2
        ^category svs)
}

sp {select-param*apply*test-failures2
   (state <s> ^name select-param
              ^operator.name test-failures2)
-->
   (<s> ^test-failure-final true)
}

sp {select-param*check-relation*elaborate*failure-detected3
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 3
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>)
}

sp {select-param*check-relation*elaborate*failure-detected4
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 4
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>)
}
sp {select-param*check-relation*elaborate*failure-detected2
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 2
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>)
}
sp {select-param*check-relation*elaborate*failure-detected9
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 9
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>
              ^failure-args.{<arg6> 6}.failure-possible-match <pm6>
              ^failure-args.{<arg7> 7}.failure-possible-match <pm7>
              ^failure-args.{<arg8> 8}.failure-possible-match <pm8>
              ^failure-args.{<arg9> 9}.failure-possible-match <pm9>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>
          ^<arg9> <obj9>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>
          ^<arg9> <obj9>)
   (<pm9> ^id <obj9>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg5> <obj5>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>
          ^<arg6>.failure-possible-match <obj6>
          ^<arg7>.failure-possible-match <obj7>
          ^<arg8>.failure-possible-match <obj8>
          ^<arg9>.failure-possible-match <obj9>)
}
sp {select-param*check-relation*elaborate*failure-detected10
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 10
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>
              ^failure-args.{<arg6> 6}.failure-possible-match <pm6>
              ^failure-args.{<arg7> 7}.failure-possible-match <pm7>
              ^failure-args.{<arg8> 8}.failure-possible-match <pm8>
              ^failure-args.{<arg9> 9}.failure-possible-match <pm9>
              ^failure-args.{<arg10> 10}.failure-possible-match <pm10>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>
          ^<arg9> <obj9>
          ^<arg10> <obj10>)
   (<pm9> ^id <obj9>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg5> <obj5>
          ^<arg10> <obj10>)
   (<pm10> ^id <obj10>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>
          ^<arg9> <obj9>
          ^<arg6> <obj6>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>
          ^<arg6>.failure-possible-match <obj6>
          ^<arg7>.failure-possible-match <obj7>
          ^<arg8>.failure-possible-match <obj8>
          ^<arg9>.failure-possible-match <obj9>
          ^<arg10>.failure-possible-match <obj10>)
}
sp {select-param*check-relation*elaborate*failure-detected5
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 5
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>)
}

sp {select-param*check-relation*elaborate*failure-detected6
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 6
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>
              ^failure-args.{<arg6> 6}.failure-possible-match <pm6>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>
          ^<arg6>.failure-possible-match <obj6>)
}
sp {select-param*check-relation*elaborate*failure-detected7
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 7
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>
              ^failure-args.{<arg6> 6}.failure-possible-match <pm6>
              ^failure-args.{<arg7> 7}.failure-possible-match <pm7>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>
          ^<arg6>.failure-possible-match <obj6>
          ^<arg7>.failure-possible-match <obj7>)
}
sp {select-param*check-relation*elaborate*failure-detected8
   (state <s> ^name select-param
              ^action-result <ar>
              ^failure-cond-args 8
              ^test-failure-final true
              ^testing-failure true
              ^failure-args.{<arg1> 1}.failure-possible-match <pm1>
              ^failure-args.{<arg2> 2}.failure-possible-match <pm2>
              ^failure-args.{<arg3> 3}.failure-possible-match <pm3>
              ^failure-args.{<arg4> 4}.failure-possible-match <pm4>
              ^failure-args.{<arg5> 5}.failure-possible-match <pm5>
              ^failure-args.{<arg6> 6}.failure-possible-match <pm6>
              ^failure-args.{<arg7> 7}.failure-possible-match <pm7>
              ^failure-args.{<arg8> 8}.failure-possible-match <pm8>)
   (<ar> -^tried)
   (<pm1> ^id <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm2> ^id <obj2>
          ^<arg1> <obj1>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm3> ^id <obj3>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm4> ^id <obj4>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm5> ^id <obj5>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm6> ^id <obj6>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg7> <obj7>
          ^<arg8> <obj8>)
   (<pm7> ^id <obj7>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg4> <obj4>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg3> <obj3>
          ^<arg8> <obj8>)
   (<pm8> ^id <obj8>
          ^<arg1> <obj1>
          ^<arg2> <obj2>
          ^<arg3> <obj3>
          ^<arg5> <obj5>
          ^<arg6> <obj6>
          ^<arg7> <obj7>
          ^<arg4> <obj4>)
-->
   (<s> ^failure-possible-match-set <pms>)
   (<pms> ^<arg1>.failure-possible-match <obj1>
          ^<arg2>.failure-possible-match <obj2>
          ^<arg3>.failure-possible-match <obj3>
          ^<arg4>.failure-possible-match <obj4>
          ^<arg5>.failure-possible-match <obj5>
          ^<arg6>.failure-possible-match <obj6>
          ^<arg7>.failure-possible-match <obj7>
          ^<arg8>.failure-possible-match <obj8>)
}


sp {select-param*check-relation*propose*failure-detected
   (state <s> ^name select-param
              ^testing-failure true
              ^test-failure-final true
              ^failure-possible-match-set <pms>)
   -{(<s> ^failure-found-possible <fp>)
     (<pms> ^<argv>.failure-possible-match <objv>
            ^{<arg2v> <> <argv>}.failure-possible-match {<obj2v> <> <objv>})
     (<fp> ^objid <objv> ^arg <argv> ^arg2 {<arg2v> <> INDEF} ^withid)
    -{(<s> ^failure-found-possible <fp2>)
       (<fp2> ^objid <objv> ^arg <argv> ^arg2 <arv2v> ^withid <obj2v>)}}
   -{(<s> ^failure-found-possible <fp>)
     (<pms> ^{<argv> <> <arg3v>}.failure-possible-match {<objv> <> <obj3v>}
            ^{<arg2v> <> <argv>}.failure-possible-match {<obj2v> <> <objv>}
            ^{<arg3v> <> <arg2v>}.failure-possible-match {<obj3v> <> <obj2v>})
     (<fp> ^objid <objv> ^arg <argv> ^arg2 <arg2v> ^arg3 <arg3v>)
    -{(<s> ^failure-found-possible <fp2>)
       (<fp2> ^objid <objv> ^arg <argv> ^arg2 <arv2v> ^arg2 <arv3v> ^withid2 <obj2v> ^withid3 <obj3v>)}}
-->
   (<s> ^operator <o> + =)
   (<o> ^name failure-detected
        ^category svs)
}

sp {select-param*check-relation*propose*failure-not-detected
   (state <s> ^name select-param
              ^processing wait
              ^testing-failure true
              ^test-failure-final true
              ^action-result <ar>)
   (<ar> -^tried)
 -->
   (<s> ^operator <o> + =)
   (<o> ^name failure-not-detected
        ^category svs)
}             

sp {select-param*check-relation*apply*failure-detected
   (state <s> ^name select-param
              ^action-result <ar>
              ^desired <d>
              ^operator <o>)
   (<o> ^name failure-detected)
--> 
#   (interrupt)
   (<s> ^partial-failure <d>)
}

#newTODO if failure not detected find new legal moves and select again
sp {select-param*check-relation*apply*failure-not-detected
   (state <s> ^name select-param
              ^action-result <ar>
              ^legal-action <a>
              ^processing <p>
              ^testing-failure <t>
              ^operator <o>)
   (<o> ^name failure-not-detected)
--> 
   (<s> ^testing-failure <t> -)
}

#sp {select-param*check-relation*apply*failure-not-detected*simulated
#   (state <s> ^name select-param
#              ^simulated <sim>
#              ^operator <o>)
#   (<o> ^name failure-not-detected)
#--> 
#   (<s> ^simulated <sim> -)
#}
######## END FAILURE DETECTION


#sp {select-parameters*force-learn
#   (state <s> ^name selection
#              ^superstate.name find-parameters)
#-->
#  (force-learn <s>)
#}

